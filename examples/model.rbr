
// ROS2Connections
ROS2Connection LocalROSConn -> { }

// TopicBridges
TopicBridge odom_pub_bridge  -> {
	msgType: "/nav_msgs/Odometry";
	rosConn: LocalROSConn;
	rosURI: "/odom";
	brokerConn: MyBroker;
	brokerURI: ".odom";
	direction: R2B;
}
TopicBridge cmd_vel_sub_bridge  -> {
	msgType: "/geometry_msgs/Twist";
	rosConn: LocalROSConn;
	rosURI: "/cmd_vel";
	brokerConn: MyBroker;
	brokerURI: ".cmd_vel";
	direction: B2R;
}
TopicBridge motor_power_sub_bridge  -> {
	msgType: "/geometry_msgs/Twist";
	rosConn: LocalROSConn;
	rosURI: "/motor_power";
	brokerConn: MyBroker;
	brokerURI: ".motor_power";
	direction: B2R;
}
TopicBridge front_left_sonar_pub_bridge  -> {
	msgType: "/sensor_msgs/Range";
	rosConn: LocalROSConn;
	rosURI: "/sonar/front_left";
	brokerConn: MyBroker;
	brokerURI: ".sonar.front_left";
	direction: R2B;
}
TopicBridge front_right_sonar_pub_bridge  -> {
	msgType: "/sensor_msgs/Range";
	rosConn: LocalROSConn;
	rosURI: "/sonar/front_right";
	brokerConn: MyBroker;
	brokerURI: ".sonar.front_right";
	direction: R2B;
}
TopicBridge rear_sonar_pub_bridge  -> {
	msgType: "/sensor_msgs/Range";
	rosConn: LocalROSConn;
	rosURI: "/sonar/rear";
	brokerConn: MyBroker;
	brokerURI: ".sonar.rear";
	direction: R2B;
}




// AMQPConnection
AMQPConnection MyBroker -> {
	host: 'localhost';
	port: 1883;
	vhost: 'skata';
	username: 'a';
	password: 'a';
}



